# This docker-compose file is used to run the project's published image
#
# Usage: docker-compose up [-d]
#
# See comment in docker-compose.dev.yml if you want to run for development.

version: "3"

networks:
  reaction:
    external:
      name: reaction.localhost

services:
  web:
    image: example-storefront:latest
    environment:
      - CANONICAL_URL=http://localhost:4000
      - BUILD_GRAPHQL_URL=http://localhost:3000/graphql
      - EXTERNAL_GRAPHQL_URL=http://localhost:3000/graphql
      - INTERNAL_GRAPHQL_URL=http://localhost:3000/graphql
      - PORT=4000
      - SEGMENT_ANALYTICS_SKIP_MINIMIZE=true
      - SEGMENT_ANALYTICS_WRITE_KEY=ENTER_KEY_HERE
      - SESSION_MAX_AGE_MS=2592000000
      - SESSION_SECRET=CHANGEME
      - STRIPE_PUBLIC_API_KEY=ENTER_STRIPE_PUBLIC_KEY_HERE
    networks:
      default:
      reaction:
    ports:
      - 4000:4000
    logging:
      driver: awslogs
      options: 
        awslogs-group: reaction-web-logs
        awslogs-region: eu-west-1
        awslogs-stream-prefix: reaction-web

  api:
    image: reaction-api:latest
    depends_on:
      - mongo
    environment:
      - MONGO_URL=mongodb://mongo.reaction.localhost:27017/reaction
      - ROOT_URL=http://localhost:3000
      - STRIPE_API_KEY=YOUR_PRIVATE_STRIPE_API_KEY
    networks:
      default:
      reaction:
    ports:
      - "3000:3000"
    logging:
      driver: awslogs
      options: 
        awslogs-group: reaction-api-logs
        awslogs-region: eu-west-1
        awslogs-stream-prefix: reaction-api

  mongo:
    image: mongo:4.2.0
    command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    networks:
      default:
      reaction:
    ports:
      - "27017:27017"
    volumes:
      - mongo-db4:/data/db
    healthcheck: # re-run rs.initiate() after startup if it failed.
      test: test $$(echo "rs.status().ok || rs.initiate().ok" | mongo --quiet) -eq 1
      interval: 10s
    logging:
      driver: awslogs
      options: 
        awslogs-group: reaction-mongo-logs
        awslogs-region: eu-west-1
        awslogs-stream-prefix: reaction-mongo

  reaction-admin:
    image: reaction-admin:latest
    environment:
      - METEOR_DISABLE_OPTIMISTIC_CACHING=1
      - METEOR_WATCH_POLLING_INTERVAL_MS=10000
      - MONGO_OPLOG_URL=mongodb://mongo.reaction.localhost:27017/local
      - MONGO_URL=mongodb://mongo.reaction.localhost:27017/reaction
      - NODE_ENV=development
      - PORT=4080
      - PUBLIC_FILES_BASE_URL=http://localhost:3000
      - PUBLIC_GRAPHQL_API_URL_HTTP=http://localhost:3000/graphql
      - PUBLIC_GRAPHQL_API_URL_WS=ws://localhost:3000/graphql
      - PUBLIC_I18N_BASE_URL=http://localhost:3000
      - PUBLIC_STOREFRONT_HOME_URL=http://localhost:4000
      - ROOT_URL=http://localhost:4080
    depends_on:
      - mongo
      - api
    networks:
      default:
      reaction:
    ports:
      - "4080:4080"
      - "9231:9229"
    logging:
      driver: awslogs
      options: 
        awslogs-group: reaction-admin-logs
        awslogs-region: eu-west-1
        awslogs-stream-prefix: reaction-admin

volumes:
  mongo-db4:


